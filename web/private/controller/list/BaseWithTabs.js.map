{"version":3,"sources":["BaseWithTabs.es6.js"],"names":["extend","onInit","prototype","apply","arguments","_buildTabsModel","getUserAttribute","getAllFilters","aFilters","sKey","getModel","getProperty","push","parseInt","onTabChanged","_filterList","oUserModel","iUserId","oViewModel","fnMapOther","oOther","key","id","title","username","aOthers","aStatic","getResourceBundle","getText","aTabs","map","concat","setProperty"],"mappings":";;;;;;;;;;;;;;;;;;sBAGe,eAAKA,MAAL,CAAY,oDAAZ,EAAkE;AAC7EC,cAD6E,oBACpE;AACL,2BAAKC,SAAL,CAAeD,MAAf,CAAsBE,KAAtB,CAA4B,IAA5B,EAAkCC,SAAlC;AACA,iBAAKC,eAAL;AACH,SAJ4E;AAM7EC,wBAN6E,8BAM1D;AACf,mBAAO,MAAP;AACH,SAR4E;AAU7EC,qBAV6E,2BAU7D;AACZ,gBAAIC,WAAW,eAAKN,SAAL,CAAeK,aAAf,CAA6BJ,KAA7B,CAAmC,IAAnC,EAAyCC,SAAzC,CAAf;AAAA,gBACIK,OAAO,KAAKC,QAAL,CAAc,MAAd,EAAsBC,WAAtB,CAAkC,aAAlC,CADX;AAEA,gBAAIF,SAAS,KAAb,EAAoB;AAChBD,yBAASI,IAAT,CAAc,qBAAW,KAAKN,gBAAL,EAAX,EAAoC,IAApC,EAA0CO,SAASJ,IAAT,EAAe,EAAf,CAA1C,CAAd;AACH;AACD,mBAAOD,QAAP;AACH,SAjB4E;AAmB7EM,oBAnB6E,0BAmB9D;AACX,iBAAKC,WAAL;AACH,SArB4E;AAuB7EV,uBAvB6E,6BAuB3D;AACd,gBAAIW,aAAa,KAAKN,QAAL,CAAc,MAAd,CAAjB;AAAA,gBACIO,UAAUD,WAAWL,WAAX,CAAuB,KAAvB,CADd;AAAA,gBAEIO,aAAa,KAAKR,QAAL,CAAc,MAAd,CAFjB;AAAA,gBAGIS,aAAa,SAAbA,UAAa,CAAUC,MAAV,EAAkB;AAC3B,uBAAO;AACHC,yBAAKD,OAAOE,EADT;AAEHC,2BAAOH,OAAOI;AAFX,iBAAP;AAIH,aARL;AAAA,gBASIC,UAAUT,WAAWL,WAAX,CAAuB,SAAvB,CATd;AAAA,gBAUIe,UAAU,CAAC;AACPL,qBAAK,KADE;AAEPE,uBAAO,KAAKI,iBAAL,GAAyBC,OAAzB,CAAiC,kBAAjC;AAFA,aAAD,EAGP;AACCP,qBAAKJ,OADN;AAECM,uBAAOP,WAAWL,WAAX,CAAuB,WAAvB;AAFR,aAHO,CAVd;AAAA,gBAiBIkB,QAAQJ,QAAQK,GAAR,CAAYX,UAAZ,EAAwBY,MAAxB,CAA+BL,OAA/B,CAjBZ;AAkBAR,uBAAWc,WAAX,CAAuB,OAAvB,EAAgCH,KAAhC;AACAX,uBAAWc,WAAX,CAAuB,aAAvB,EAAsCf,OAAtC;AACH;AA5C4E,KAAlE,C","file":"BaseWithTabs.js","sourcesContent":["import Base from \"./Base\";\r\nimport Filter from \"sap/ui/model/Filter\";\r\n\r\nexport default Base.extend(\"spet.sbwo.web.private.controller.list.BaseWithTabs\", {\r\n    onInit() {\r\n        Base.prototype.onInit.apply(this, arguments);\r\n        this._buildTabsModel();\r\n    },\r\n\r\n    getUserAttribute() {\r\n        return \"User\";\r\n    },\r\n\r\n    getAllFilters() {\r\n        var aFilters = Base.prototype.getAllFilters.apply(this, arguments),\r\n            sKey = this.getModel(\"view\").getProperty(\"/currentTab\");\r\n        if (sKey !== \"all\") {\r\n            aFilters.push(new Filter(this.getUserAttribute(), \"EQ\", parseInt(sKey, 10)));\r\n        }\r\n        return aFilters;\r\n    },\r\n\r\n    onTabChanged() {\r\n        this._filterList();\r\n    },\r\n\r\n    _buildTabsModel() {\r\n        var oUserModel = this.getModel(\"user\"),\r\n            iUserId = oUserModel.getProperty(\"/id\"),\r\n            oViewModel = this.getModel(\"view\"),\r\n            fnMapOther = function (oOther) {\r\n                return {\r\n                    key: oOther.id,\r\n                    title: oOther.username\r\n                };\r\n            },\r\n            aOthers = oUserModel.getProperty(\"/others\"),\r\n            aStatic = [{\r\n                key: \"all\",\r\n                title: this.getResourceBundle().getText(\"itfAllUsersTitle\")\r\n            }, {\r\n                key: iUserId,\r\n                title: oUserModel.getProperty(\"/username\")\r\n            }],\r\n            aTabs = aOthers.map(fnMapOther).concat(aStatic);\r\n        oViewModel.setProperty(\"/tabs\", aTabs);\r\n        oViewModel.setProperty(\"/currentTab\", iUserId);\r\n    }\r\n\r\n});\r\n"]}