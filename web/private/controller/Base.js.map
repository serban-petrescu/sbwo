{"version":3,"sources":["Base.es6.js"],"names":["PARSERS","Map","parseInt","parseFloat","ACTIONS","URLHelper","triggerEmail","s","triggerTel","triggerSms","redirect","ROUTES_FOR_ENTITIES","extend","getRouter","getOwnerComponent","getModel","sName","getView","setModel","oModel","getResourceBundle","onNavBack","sPreviousHash","getInstance","getPreviousHash","undefined","history","go","navTo","buildViewModel","oData","onRefreshODataContent","refresh","onValueChanged","oEvent","getSource","oInput","oDataModel","sContextPath","data","oContext","getProperty","sValue","getValue","oBundle","oBinding","getBindingContext","sDataBasePath","getPath","fnGetText","sText","indexOf","getText","substring","fnTrimPath","sPath","lastIndexOf","length","fnProcessCapture","oCtxt","sCap","target","sCapture","caseInsensitive","toLowerCase","value","force","Object","keys","sKey","setProperty","hasOwnProperty","defaultValue","get","type","o","aMatch","match","regex","setValueState","captures","i","severity","setValueStateText","text","doExternalAction","oControl","fnAction","applyContainsFilter","sQuery","sAttribute","filter","Contains","applySearchFilter","aFilters","getSearchFilters","fnApplyAnd","aFlt","filters","and","fnMap","sPart","toUpperCase","fnFilter","split","map","getRouteForEntityType","sType","navigateToEntity","iType","iId","oRouter","sRoute","id","sUrl","fnSuccess","ajax","url","method","success","bind","error","onRestApiError","post","contentType","JSON","stringify","headers","getSecurityToken","put","del","oXhr","status","onNotFoundError","onInternalServerError","onTechnicalError","fnKeyExists","hasText","fnTranformToHyphens","sString","replace","fnTransformToCamelCase","sap","camelCase","fnGetControlErrorText","sError","sEntity","hyphen","fnGetDatabaseErrorText","fnGetErrorObject","parse","responseText","e","oError","entity","cause","details"],"mappings":"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","file":"Base.js","sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\r\nimport History from \"sap/ui/core/routing/History\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport Input from \"sap/m/Input\";\r\nimport Filter from \"sap/ui/model/Filter\";\r\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\r\nimport MessageBox from \"sap/m/MessageBox\";\r\nimport jQuery from \"jquery.sap.global\";\r\nimport sapm from \"sap/m/library\";\r\n\r\nconst PARSERS = new Map([\r\n    [\"integer\", parseInt],\r\n    [\"float\", parseFloat]\r\n]);\r\n\r\nconst ACTIONS = new Map([\r\n    [\"email\", s => sapm.URLHelper.triggerEmail(s)],\r\n    [\"phone\", s => sapm.URLHelper.triggerTel(s)],\r\n    [\"sms\", s => sapm.URLHelper.triggerSms(s)],\r\n    [\"link\", s => sapm.URLHelper.redirect(s, true)],\r\n    [\"download\", s => sapm.URLHelper.redirect(s, false)],\r\n]);\r\n\r\nconst ROUTES_FOR_ENTITIES = new Map([\r\n    [\"PERSON\", \"person\"],\r\n    [\"EXPERTISE\", \"expertise\"]\r\n]);\r\n\r\nexport default Controller.extend(\"spet.sbwo.web.private.controller.Base\", {\r\n    /**\r\n     * Convenience method for accessing the router in every controller of the application.\r\n     * @public\r\n     * @returns {Router} the router for this component\r\n     */\r\n    getRouter() {\r\n        return this.getOwnerComponent().getRouter();\r\n    },\r\n\r\n    /**\r\n     * Convenience method for getting the view model by name in every controller of the application.\r\n     * @public\r\n     * @param {string} sName the model name\r\n     * @returns {sap.ui.model.Model} the model instance\r\n     */\r\n    getModel(sName) {\r\n        return this.getView().getModel(sName) || this.getOwnerComponent().getModel(sName);\r\n    },\r\n\r\n    /**\r\n     * Convenience method for setting the view model in every controller of the application.\r\n     * @public\r\n     * @param {Model}\toModel\tthe model instance\r\n     * @param {string=} sName\tthe model name\r\n     * @returns {View} the view instance\r\n     */\r\n    setModel(oModel, sName) {\r\n        return this.getView().setModel(oModel, sName);\r\n    },\r\n\r\n    /**\r\n     * Convenience method for getting the resource bundle.\r\n     * @public\r\n     * @returns {ResourceBundle} The resource bundle of the component\r\n     */\r\n    getResourceBundle() {\r\n        return this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n    },\r\n\r\n    /**\r\n     * Event handler for navigating back.\r\n     * It checks if there is a history entry. If yes, history.go(-1) will happen.\r\n     * If not, it will replace the current entry of the browser history with the master route.\r\n     * @public\r\n     */\r\n    onNavBack() {\r\n        var sPreviousHash = History.getInstance().getPreviousHash();\r\n\r\n        if (sPreviousHash !== undefined) {\r\n            // The history contains a previous entry\r\n            history.go(-1);\r\n        } else {\r\n            // Otherwise we go backwards with a forward history\r\n            this.getRouter().navTo(\"home\", {}, /* bReplace = */ true);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Utility method for building a view-specific model.\r\n     * @param\t{object=}\toData\tThe data to be held in the view model.\r\n     * @returns\t{Controller}\tThe current instance.\r\n     */\r\n    buildViewModel(oData) {\r\n        this.setModel(new JSONModel(oData), \"view\");\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Refreshes the OData model.\r\n     */\r\n    onRefreshODataContent() {\r\n        this.getModel().refresh();\r\n    },\r\n\r\n    /**\r\n     * Event handler for value changes.\r\n     * @protected\r\n     * @param\t{Event}\t\toEvent\t\tEvent object.\r\n     * @returns {void}\r\n     */\r\n    onValueChanged(oEvent) {\r\n        if (!oEvent || !(oEvent.getSource() instanceof Input)) {\r\n            return;\r\n        }\r\n\r\n        let oInput = oEvent.getSource(),\r\n            oDataModel = this.getModel(\"data\"),\r\n            sContextPath = oInput.data(\"context\"),\r\n            oContext = this.getModel(\"context\").getProperty(sContextPath),\r\n            sValue = oInput.getValue(),\r\n            oBundle = this.getResourceBundle(),\r\n            oBinding = oInput.getBindingContext(\"data\"),\r\n            sDataBasePath = oBinding ? oBinding.getPath() : \"\";\r\n\r\n        const fnGetText = sText => sText.indexOf(\"i18n>\") === 0 ? oBundle.getText(sText.substring(5)) : sText;\r\n        const fnTrimPath = sPath => sPath + (sPath.lastIndexOf(\"/\") === sPath.length - 1 ? \"\" : \"/\");\r\n\r\n        const fnProcessCapture = function (oCtxt, sCap) {\r\n            let sPath = fnTrimPath(sDataBasePath) + oCtxt.target;\r\n            let sCapture = oCtxt.caseInsensitive ? (sCap || \"\").toLowerCase() : sCap;\r\n            if (oCtxt.value) {\r\n                if (oCtxt.force || !oDataModel.getProperty(sPath)) {\r\n                    for (let sKey of Object.keys(oCtxt.value)) {\r\n                        if (sKey === sCapture) {\r\n                            oDataModel.setProperty(sPath, oCtxt.value[sKey]);\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (oCtxt.hasOwnProperty(\"defaultValue\")) {\r\n                        oDataModel.setProperty(sPath, fnGetText(oCtxt.defaultValue));\r\n                    }\r\n                }\r\n            } else {\r\n                oDataModel.setProperty(sPath, PARSERS.get(oCtxt.type) || (o => o));\r\n            }\r\n        };\r\n\r\n        if (sDataBasePath && sContextPath && oContext) {\r\n            if (sValue) {\r\n                let aMatch = sValue.match(oContext.regex);\r\n                if (aMatch && aMatch.length) {\r\n                    oInput.setValueState(\"None\");\r\n                    if (oContext.captures) {\r\n                        for (let i = 1; i < aMatch.length && i <= oContext.captures.length; ++i) {\r\n                            fnProcessCapture(oContext.captures[i - 1], aMatch[i]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    oInput.setValueState(oContext.severity || \"Error\");\r\n                    oInput.setValueStateText(fnGetText(oContext.text));\r\n                }\r\n            } else {\r\n                oInput.setValueState(\"None\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Does an external action (such as opening the phone app).\r\n     * The action and its target (the phone number, email, etc) should be present as\r\n     * custom data entries on the event source.\r\n     */\r\n    doExternalAction(oEvent) {\r\n        let oControl = oEvent.getSource(),\r\n            fnAction = ACTIONS.get(oControl.data(\"action\"));\r\n        if (fnAction) {\r\n            fnAction(oControl.data(\"target\"));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Applies a simple contains filter.\r\n     * @param\t{string}\tsQuery\t\tThe search query.\r\n     * @param\t{string}\tsAttribute\tThe target search attribute.\r\n     * @param\t{Binding}\toBinding\tThe target binding which should be filtered.\r\n     * @returns {void}\r\n     */\r\n    applyContainsFilter(sQuery, sAttribute, oBinding) {\r\n        oBinding.filter(sQuery ? new Filter(sAttribute, FilterOperator.Contains, sQuery) : []);\r\n    },\r\n\r\n    /**\r\n     * Applies a search filter. Search filters work by splitting the search query into words\r\n     * and applying a filter on a single attribute. This filter will be a conjunction of Contains\r\n     * filters for each word. The search is case insensitive (the words are converted to upper case)\r\n     * and the target attribute is expected to be upper case as well.\r\n     * @param\t{string}\tsQuery\t\tThe search query.\r\n     * @param\t{string}\tsAttribute\tThe target search attribute.\r\n     * @param\t{Binding}\toBinding\tThe target binding which should be filtered.\r\n     * @returns {void}\r\n     */\r\n    applySearchFilter(sQuery, sAttribute, oBinding) {\r\n        let aFilters = this.getSearchFilters(sQuery, sAttribute);\r\n        const fnApplyAnd = function (aFlt) {\r\n            return new Filter({\r\n                filters: aFlt,\r\n                and: true\r\n            });\r\n        };\r\n        oBinding.filter(aFilters.length ? fnApplyAnd(aFilters) : aFilters);\r\n    },\r\n\r\n    /**\r\n     * Gets the search filters. Search filters work by splitting the search query into words\r\n     * and applying a filter on a single attribute. This filter will be a conjunction of Contains\r\n     * filters for each word. The search is case insensitive (the words are converted to upper case)\r\n     * and the target attribute is expected to be upper case as well.\r\n     * @param\t{string}\tsQuery\t\tThe search query.\r\n     * @param\t{string}\tsAttribute\tThe target search attribute.\r\n     * @returns {Filter[]}\tThe array of filters which should be applied;\r\n     */\r\n    getSearchFilters(sQuery, sAttribute) {\r\n        const fnMap = sPart => new Filter(sAttribute, FilterOperator.Contains, (sPart || \"\").toUpperCase());\r\n        const fnFilter = sPart => !!sPart;\r\n        return (sQuery || \"\").split(\" \").filter(fnFilter).map(fnMap);\r\n    },\r\n\r\n    /**\r\n     * Retrieves the route name for the given entity type.\r\n     */\r\n    getRouteForEntityType(sType) {\r\n        return ROUTES_FOR_ENTITIES.get(sType);\r\n    },\r\n\r\n    /**\r\n     * Navigates to an entity based on the entity type and id.\r\n     */\r\n    navigateToEntity(iType, iId) {\r\n        var oRouter = this.getRouter(),\r\n            sRoute = this.getRouteForEntityType(iType);\r\n        if (sRoute) {\r\n            oRouter.navTo(sRoute, {\r\n                id: iId\r\n            });\r\n        }\r\n    },\r\n\r\n    get(sUrl, fnSuccess) {\r\n        return jQuery.ajax({\r\n            url: sUrl,\r\n            method: \"GET\",\r\n            success: fnSuccess.bind(this),\r\n            error: this.onRestApiError.bind(this)\r\n        });\r\n    },\r\n\r\n    post(sUrl, oData, fnSuccess) {\r\n        return jQuery.ajax({\r\n            url: sUrl,\r\n            method: \"POST\",\r\n            contentType: \"json\",\r\n            data: JSON.stringify(oData),\r\n            success: fnSuccess.bind(this),\r\n            headers: {\r\n                \"X-CSRF-TOKEN\": this.getModel().getSecurityToken()\r\n            },\r\n            error: this.onRestApiError.bind(this)\r\n        });\r\n    },\r\n\r\n    put(sUrl, oData, fnSuccess) {\r\n        return jQuery.ajax({\r\n            url: sUrl,\r\n            method: \"PUT\",\r\n            contentType: \"json\",\r\n            success: fnSuccess.bind(this),\r\n            data: JSON.stringify(oData),\r\n            error: this.onRestApiError.bind(this)\r\n        });\r\n    },\r\n\r\n    del(sUrl, fnSuccess) {\r\n        return jQuery.ajax({\r\n            url: sUrl,\r\n            method: \"DELETE\",\r\n            success: fnSuccess.bind(this),\r\n            error: this.onRestApiError.bind(this)\r\n        });\r\n\r\n    },\r\n\r\n    onRestApiError(oXhr) {\r\n        switch (oXhr.status) {\r\n            case 403:\r\n                // do nothing because this is handeled by the global listener\r\n                break;\r\n            case 404:\r\n                this.onNotFoundError(oXhr);\r\n                break;\r\n            case 500:\r\n                this.onInternalServerError(oXhr);\r\n                break;\r\n            default:\r\n                this.onTechnicalError(oXhr);\r\n                break;\r\n        }\r\n    },\r\n\r\n    onNotFoundError( /* oXhr */ ) {\r\n        MessageBox.error(this.getResourceBundle().getText(\"txtErrorNotFoundText\"));\r\n    },\r\n\r\n    onTechnicalError( /* oXhr */ ) {\r\n        MessageBox.error(this.getResourceBundle().getText(\"txtErrorTechnicalText\"));\r\n    },\r\n\r\n    onInternalServerError(oXhr) {\r\n        var oBundle = this.getResourceBundle();\r\n\r\n        const fnKeyExists = sKey => oBundle.hasText(sKey) || oBundle.getText(sKey) !== sKey;\r\n\r\n        const fnTranformToHyphens = sString => (sString || \"\").replace(/_/g, \"-\").toLowerCase();\r\n\r\n        const fnTransformToCamelCase = sString => jQuery.sap.camelCase((sString || \"\").replace(/-+/g, \"-\").toLowerCase());\r\n\r\n        const fnGetControlErrorText = function (sError, sEntity) {\r\n            let sKey = fnTransformToCamelCase(\"txt-error-control-\" + jQuery.sap.hyphen(sEntity) + \"-\" +\r\n                fnTranformToHyphens(sError) + \"-text\");\r\n            if (fnKeyExists(sKey)) {\r\n                return oBundle.getText(sKey);\r\n            }\r\n            sKey = fnTransformToCamelCase(\"txt-error-control-\" + fnTranformToHyphens(sError) + \"-text\");\r\n            if (fnKeyExists(sKey)) {\r\n                return oBundle.getText(sKey);\r\n            }\r\n            return oBundle.getText(\"txtErrorControlText\");\r\n        };\r\n\r\n        const fnGetDatabaseErrorText = function (sError) {\r\n            let sKey = fnTransformToCamelCase(\"txt-error-database-\" + fnTranformToHyphens(sError) + \"-text\");\r\n            if (fnKeyExists(sKey)) {\r\n                return oBundle.getText(sKey);\r\n            }\r\n            return oBundle.getText(\"txtErrorDatabaseText\");\r\n        };\r\n\r\n        const fnGetErrorObject = function () {\r\n            try {\r\n                return JSON.parse(typeof oXhr === \"string\" ? oXhr : oXhr.responseText) || {};\r\n            } catch (e) {\r\n                return {};\r\n            }\r\n        };\r\n\r\n        let oError = fnGetErrorObject();\r\n\r\n        switch (oError.type) {\r\n            case \"CONTROL\":\r\n                if (oError.error && oError.entity) {\r\n                    if (oError.cause) {\r\n                        MessageBox.error(fnGetControlErrorText(oError.error, oError.entity), {\r\n                            details: fnGetDatabaseErrorText(oError.cause.error) +\r\n                                (oError.cause.details ? \"\\n\" + oError.cause.details : \"\")\r\n                        });\r\n                    } else {\r\n                        MessageBox.error(fnGetControlErrorText(oError.error, oError.entity));\r\n                    }\r\n                } else if (oError.cause) {\r\n                    MessageBox.error(fnGetDatabaseErrorText(oError.cause.error), {\r\n                        details: oError.cause.details || undefined\r\n                    });\r\n                } else {\r\n                    MessageBox.error(this.getResourceBundle().getText(\"txtErrorTechnicalText\"));\r\n                }\r\n                break;\r\n            case \"DATABASE\":\r\n                MessageBox.error(fnGetDatabaseErrorText(oError.error), {\r\n                    details: oError.details || undefined\r\n                });\r\n                break;\r\n            default:\r\n                MessageBox.error(this.getResourceBundle().getText(\"txtErrorTechnicalText\"), {\r\n                    details: oError.details || undefined\r\n                });\r\n                break;\r\n        }\r\n    }\r\n});\r\n"]}