{"version":3,"sources":["UserSettings.controller.es6.js"],"names":["USER_BASE_API_PATH","LANGUAGE_TO_I18N","Map","THEME_TO_I18N","fnI18nMapOrEmpty","oBundle","oMap","sKey","has","getText","get","fnCodeToKey","sCode","toLowerCase","extend","onInit","prototype","apply","arguments","getRouter","getRoute","attachPatternMatched","onRouteMatched","byId","addStyleClass","getOwnerComponent","getContentDensityClass","getModel","setProperty","first","second","getBaseApiUrl","formatLanguageText","getResourceBundle","formatThemeText","onSaveSuccess","information","onOpenPasswordDialog","open","onClosePasswordDialog","close","onChangePassword","oModel","sFirst","getProperty","sSecond","length","put","password","error"],"mappings":"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","file":"UserSettings.controller.js","sourcesContent":["import Base from \"spet/sbwo/web/private/controller/entity/Base\";\r\nimport MessageBox from \"sap/m/MessageBox\";\r\n\r\nconst USER_BASE_API_PATH = \"/private/api/rest/user\";\r\n\r\nconst LANGUAGE_TO_I18N = new Map([\r\n    [\"en\", \"txtLanguageEnglishText\"],\r\n    [\"ro\", \"txtLanguageRomanianText\"]\r\n]);\r\n\r\nconst THEME_TO_I18N = new Map([\r\n    [\"sap_belize\", \"txtThemeBelizeText\"],\r\n    [\"sap_bluecrystal\", \"txtThemeBlueCrystalText\"],\r\n    [\"sap_hcb\", \"txtThemeHighContrastBlackText\"]\r\n]);\r\n\r\nconst fnI18nMapOrEmpty = (oBundle, oMap, sKey) => oMap.has(sKey) ? oBundle.getText(oMap.get(sKey)) : \"\";\r\nconst fnCodeToKey = sCode => (sCode || \"\").toLowerCase();\r\n\r\nexport default Base.extend(\"spet.sbwo.web.private.controller.misc.UserSettings\", {\r\n    onInit() {\r\n        Base.prototype.onInit.apply(this, arguments);\r\n        this.getRouter().getRoute(\"user-settings\").attachPatternMatched(this.onRouteMatched, this);\r\n        this.byId(\"dlgChangePassword\").addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n        this.getModel(\"view\").setProperty(\"/password\", {first: \"\", second: \"\"});\r\n    },\r\n\r\n    getBaseApiUrl(){\r\n        return USER_BASE_API_PATH + \"/preference\";\r\n    },\r\n\r\n    formatLanguageText(sCode) {\r\n        return fnI18nMapOrEmpty(this.getResourceBundle(), LANGUAGE_TO_I18N, fnCodeToKey(sCode));\r\n    },\r\n\r\n    formatThemeText(sCode) {\r\n        return fnI18nMapOrEmpty(this.getResourceBundle(), THEME_TO_I18N, fnCodeToKey(sCode));\r\n    },\r\n\r\n    onSaveSuccess() {\r\n        Base.prototype.onSaveSuccess.apply(this, arguments);\r\n        MessageBox.information(this.getResourceBundle().getText(\"txtUserSettingsUpdatedRefreshInfo\"));\r\n    },\r\n\r\n    onOpenPasswordDialog() {\r\n        this.byId(\"dlgChangePassword\").open();\r\n    },\r\n\r\n    onClosePasswordDialog() {\r\n        this.getModel(\"view\").setProperty(\"/password\", {first: \"\", second: \"\"});\r\n        this.byId(\"dlgChangePassword\").close();\r\n    },\r\n\r\n    onChangePassword() {\r\n        let oModel = this.getModel(\"view\"),\r\n            sFirst = oModel.getProperty(\"/password/first\"),\r\n            sSecond = oModel.getProperty(\"/password/second\");\r\n        if (sFirst && sFirst === sSecond && sFirst.length > 6) {\r\n            this.put(USER_BASE_API_PATH + \"/password/update\", {password: sFirst}, () => {\r\n                this.onClosePasswordDialog();\r\n                MessageBox.information(this.getResourceBundle().getText(\"txtChangePasswordSuccessInfo\"));\r\n            });\r\n        }\r\n        else {\r\n            MessageBox.error(this.getResourceBundle().getText(\"txtChangePasswordInvalidError\"));\r\n        }\r\n    }\r\n});\r\n"]}