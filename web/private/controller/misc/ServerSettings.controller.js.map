{"version":3,"sources":["ServerSettings.controller.es6.js"],"names":["DEFAULT_LOG_COLOR","LEVEL_TO_LOG_COLOR","Map","DEFAULT_SCHEDULE_TYPE_I18N","SCHEDULE_TYPE_TO_I18N","extend","onInit","prototype","apply","arguments","onRouteMatched","onReadLogs","onReadSchedules","forEach","getRouter","getRoute","attachPatternMatched","fnListener","getBaseApiUrl","formatLogColorFromLevel","sLevel","get","formatScheduleType","sType","sKey","getResourceBundle","getText","onDatabaseBackupLocationVh","oEvent","fnOnSelect","oE","aSels","getParameter","length","getModel","setProperty","onValueChanged","byId","getController","multiselect","current","getSource","getValue","folder","attachEventOnce","open","onSearchLogsOrEvents","fnPressHandler","sQuery","applyContainsFilter","getBinding","onSearchLogs","onSearchLogEvents","fnHandler","onReadLogEvents","getProperty","onShowLogEvents","sName","getBindingContext","name","events","to","onShowLogList","back","oData","onSaveSuccess","information"],"mappings":"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","file":"ServerSettings.controller.js","sourcesContent":["import Base from \"spet/sbwo/web/private/controller/entity/Base\";\r\n// import DateFormat from \"sap/ui/core/format/DateFormat\";\r\nimport MessageBox from \"sap/m/MessageBox\";\r\n\r\nconst DEFAULT_LOG_COLOR = \"Neutral\";\r\nconst LEVEL_TO_LOG_COLOR = new Map([\r\n    [\"ERROR\", \"Negative\"],\r\n    [\"WARN\", \"Critical\"]\r\n]);\r\n\r\nconst DEFAULT_SCHEDULE_TYPE_I18N = \"txtScheduleTypeUnknownText\";\r\nconst SCHEDULE_TYPE_TO_I18N = new Map([\r\n    [\"BACKUP\", \"txtScheduleTypeBackupText\"],\r\n    [\"CLEANUP\", \"txtScheduleTypeCleanupText\"],\r\n    [\"SESSION_CACHE\", \"txtScheduleTypeSessionFlushText\"],\r\n    [\"COURT_API_BATCH\", \"txtScheduleTypeCheckCourtText\"],\r\n    [\"GEOCODING_BATCH\", \"txtScheduleTypeGeocodeText\"]\r\n]);\r\n\r\nexport default Base.extend(\"spet.sbwo.web.private.controller.misc.ServerSettings\", {\r\n    onInit() {\r\n        Base.prototype.onInit.apply(this, arguments);\r\n        [this.onRouteMatched, this.onReadLogs, this.onReadSchedules].forEach(fnListener => {\r\n            this.getRouter().getRoute(\"server-settings\").attachPatternMatched(fnListener, this);\r\n        });\r\n    },\r\n\r\n    getBaseApiUrl() {\r\n        return \"/private/api/rest/utility/file\";\r\n    },\r\n\r\n    formatLogColorFromLevel(sLevel) {\r\n        return LEVEL_TO_LOG_COLOR.get(sLevel) || DEFAULT_LOG_COLOR;\r\n    },\r\n\r\n    formatScheduleType(sType) {\r\n        let sKey = SCHEDULE_TYPE_TO_I18N.get(sType) || DEFAULT_SCHEDULE_TYPE_I18N;\r\n        return this.getResourceBundle().getText(sKey);\r\n    },\r\n\r\n    onDatabaseBackupLocationVh(oEvent) {\r\n        const fnOnSelect = (oE) => {\r\n            var aSels = oE.getParameter(\"result\");\r\n            if (aSels.length) {\r\n                this.getModel(\"data\").setProperty(\"/databaseBackupLocation\", aSels[0]);\r\n                this.onValueChanged();\r\n            }\r\n        };\r\n        this.byId(\"viewFileExporer\").getController()\r\n            .multiselect(false)\r\n            .current(oEvent.getSource().getValue())\r\n            .folder()\r\n            .attachEventOnce(\"select\", fnOnSelect)\r\n            .open();\r\n    },\r\n\r\n    onSearchLogsOrEvents(oEvent, fnPressHandler) {\r\n        const sQuery = oEvent.getParameter(\"query\");\r\n        this.applyContainsFilter(sQuery, \"name\", this.byId(\"lstLogs\").getBinding(\"items\"));\r\n        if (oEvent.getParameter(\"refreshButtonPressed\")) {\r\n            fnPressHandler();\r\n        }\r\n    },\r\n\r\n    onSearchLogs(oEvent) {\r\n        this.onSearchLogsOrEvents(oEvent, () => this.onReadLogs());\r\n    },\r\n\r\n    onSearchLogEvents(oEvent) {\r\n        const fnHandler = () => this.onReadLogEvents(this.getModel(\"view\").getProperty(\"/log/name\"));\r\n        this.onSearchLogsOrEvents(oEvent, fnHandler);\r\n    },\r\n\r\n    onShowLogEvents(oEvent) {\r\n        const sName = oEvent.getSource().getBindingContext(\"view\").getProperty(\"name\");\r\n        this.getModel(\"view\").setProperty(\"/log\", {\r\n            name: sName,\r\n            events: []\r\n        });\r\n        this.byId(\"navLogs\").to(this.byId(\"sccLogEvents\"));\r\n        this.onReadLogEvents(sName);\r\n    },\r\n\r\n    onShowLogList() {\r\n        this.byId(\"navLogs\").back();\r\n    },\r\n\r\n    onReadLogs() {\r\n        this.get(this.getBaseApiUrl() + \"/logs\", oData => this.getModel(\"view\").setProperty(\"/logs\", oData));\r\n    },\r\n\r\n    onReadLogEvents(sName) {\r\n        const fnHandler = oData => this.getModel(\"view\").setProperty(\"/log/events\", oData);\r\n        this.get(this.getBaseApiUrl() + \"/log/\" + sName, fnHandler);\r\n    },\r\n\r\n    onReadSchedules() {\r\n        const fnHandler = oData => this.getModel(\"view\").setProperty(\"/schedules\", oData);\r\n        this.get(this.getBaseApiUrl() + \"/schedules/read\", fnHandler);\r\n    },\r\n\r\n    onSaveSuccess() {\r\n        Base.prototype.onSaveSuccess.apply(this, arguments);\r\n        MessageBox.information(this.getResourceBundle().getText(\"txtServerSettingsUpdatedRefreshInfo\"));\r\n    }\r\n});\r\n"]}