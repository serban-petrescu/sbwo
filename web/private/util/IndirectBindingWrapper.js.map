{"version":3,"sources":["IndirectBindingWrapper.es6.js"],"names":["extend","metadata","properties","type","defaultValue","undefined","aggregations","control","multiple","defaultAggregation","setControl","oControl","setAggregation","updateBinding","setValue","sValue","setProperty","setPattern","setDefault","setModelName","sPattern","getPattern","getValue","sDefault","getDefault","sModel","getModelName","getControl","bindElement","model","path","replace","renderer","oRm","renderControl"],"mappings":";;;;;;;;;;;;;;;;sBAMe,kBAAQA,MAAR,CAAe,mDAAf,EAAoE;AAC/EC,kBAAU;AACNC,wBAAY;AACR,2BAAW;AACPC,0BAAM;AADC,iBADH;AAIR,yBAAS;AACLA,0BAAM;AADD,iBAJD;AAOR,2BAAW;AACPA,0BAAM;AADC,iBAPH;AAUR,6BAAa;AACTA,0BAAM,QADG;AAETC,kCAAcC;AAFL;AAVL,aADN;AAgBNC,0BAAc;AACVC,yBAAS;AACLJ,0BAAM,qBADD;AAELK,8BAAU;AAFL;AADC,aAhBR;AAsBNC,gCAAoB;AAtBd,SADqE;;AA0B/EC,kBA1B+E,sBA0BpEC,QA1BoE,EA0B1D;AACjB,iBAAKC,cAAL,CAAoB,SAApB,EAA+BD,QAA/B;AACA,iBAAKE,aAAL;AACH,SA7B8E;AA+B/EC,gBA/B+E,oBA+BtEC,MA/BsE,EA+B9D;AACb,iBAAKC,WAAL,CAAiB,OAAjB,EAA0BD,MAA1B;AACA,iBAAKF,aAAL;AACH,SAlC8E;AAoC/EI,kBApC+E,sBAoCpEF,MApCoE,EAoC5D;AACf,iBAAKC,WAAL,CAAiB,SAAjB,EAA4BD,MAA5B;AACA,iBAAKF,aAAL;AACH,SAvC8E;AAyC/EK,kBAzC+E,sBAyCpEH,MAzCoE,EAyC5D;AACf,iBAAKC,WAAL,CAAiB,SAAjB,EAA4BD,MAA5B;AACA,iBAAKF,aAAL;AACH,SA5C8E;AA8C/EM,oBA9C+E,wBA8ClEJ,MA9CkE,EA8C1D;AACjB,iBAAKC,WAAL,CAAiB,WAAjB,EAA8BD,MAA9B;AACA,iBAAKF,aAAL;AACH,SAjD8E;AAmD/EA,qBAnD+E,2BAmD/D;AACZ,gBAAIO,WAAW,KAAKC,UAAL,EAAf;AAAA,gBACIN,SAAS,KAAKO,QAAL,EADb;AAAA,gBAEIC,WAAW,KAAKC,UAAL,EAFf;AAAA,gBAGIC,SAAS,KAAKC,YAAL,EAHb;AAAA,gBAIIf,WAAW,KAAKgB,UAAL,EAJf;;AAMA,gBAAIhB,QAAJ,EAAc;AACV,oBAAIS,YAAYL,WAAW,IAAvB,IAA+BA,WAAWV,SAA9C,EAAyD;AACrDM,6BAASiB,WAAT,CAAqB;AACjBC,+BAAOJ,MADU;AAEjBK,8BAAMV,SAASW,OAAT,CAAiB,IAAjB,EAAuBhB,SAAS,EAAhC;AAFW,qBAArB;AAIH,iBALD,MAKO,IAAIQ,QAAJ,EAAc;AACjBZ,6BAASiB,WAAT,CAAqB;AACjBC,+BAAOJ,MADU;AAEjBK,8BAAMP;AAFW,qBAArB;AAIH;AACJ;AACJ,SAvE8E;AAyE/ES,gBAzE+E,oBAyEtEC,GAzEsE,EAyEjEtB,QAzEiE,EAyEvD;AACpBsB,gBAAIC,aAAJ,CAAkBvB,SAASgB,UAAT,EAAlB;AACH;AA3E8E,KAApE,C","file":"IndirectBindingWrapper.js","sourcesContent":["import Control from \"sap/ui/core/Control\";\r\n\r\n/**\r\n * Link for handling indirect bindings.\r\n * @class\r\n */\r\nexport default Control.extend(\"spet.sbwo.web.private.util.IndirectBindingWrapper\", {\r\n    metadata: {\r\n        properties: {\r\n            \"pattern\": {\r\n                type: \"string\"\r\n            },\r\n            \"value\": {\r\n                type: \"any\"\r\n            },\r\n            \"default\": {\r\n                type: \"string\"\r\n            },\r\n            \"modelName\": {\r\n                type: \"string\",\r\n                defaultValue: undefined\r\n            }\r\n        },\r\n        aggregations: {\r\n            control: {\r\n                type: \"sap.ui.core.Control\",\r\n                multiple: false\r\n            }\r\n        },\r\n        defaultAggregation: \"control\"\r\n    },\r\n\r\n    setControl(oControl) {\r\n        this.setAggregation(\"control\", oControl);\r\n        this.updateBinding();\r\n    },\r\n\r\n    setValue(sValue) {\r\n        this.setProperty(\"value\", sValue);\r\n        this.updateBinding();\r\n    },\r\n\r\n    setPattern(sValue) {\r\n        this.setProperty(\"pattern\", sValue);\r\n        this.updateBinding();\r\n    },\r\n\r\n    setDefault(sValue) {\r\n        this.setProperty(\"default\", sValue);\r\n        this.updateBinding();\r\n    },\r\n\r\n    setModelName(sValue) {\r\n        this.setProperty(\"modelName\", sValue);\r\n        this.updateBinding();\r\n    },\r\n\r\n    updateBinding() {\r\n        var sPattern = this.getPattern(),\r\n            sValue = this.getValue(),\r\n            sDefault = this.getDefault(),\r\n            sModel = this.getModelName(),\r\n            oControl = this.getControl();\r\n\r\n        if (oControl) {\r\n            if (sPattern && sValue !== null && sValue !== undefined) {\r\n                oControl.bindElement({\r\n                    model: sModel,\r\n                    path: sPattern.replace(/#/g, sValue + \"\")\r\n                });\r\n            } else if (sDefault) {\r\n                oControl.bindElement({\r\n                    model: sModel,\r\n                    path: sDefault\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    renderer(oRm, oControl) {\r\n        oRm.renderControl(oControl.getControl());\r\n    }\r\n\r\n});\r\n"]}